{"version":3,"sources":["../../node_modules/require_optional sync","components/arrow-down-bold.svg","logo.svg","components/Travelitem.js","components/Missionkey.js","components/Travels.js","components/Mapgoogle.js","components/Travel.js","components/Landpads.js","components/NewItemForm.js","components/Item.js","components/Items.js","components/item_detail.js","components/fileupload.js","components/CreateItem.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","__webpack_require__","p","TravelItem","_ref","_ref$launch","launch","flight_number","mission_name","launch_date_local","launch_success","react_default","a","createElement","className","classNames","text-success","text-danger","react_router_dom","to","concat","MissionKey","TRAVELS_QUERY","gql","_templateObject","Component","AnyReactComponent","text","Mapgoogle","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","center","props","inherits","createClass","key","value","style","height","width","lib_default","bootstrapURLKeys","defaultCenter","defaultZoom","zoom","Mapgoogle_AnyReactComponent","lat","lng","long","defaultProps","TRAVEL_QUERY","Travel_templateObject","Travel","apply","arguments","match","params","parseInt","react","react_apollo_esm","query","variables","loading","error","data","console","log","_data$launch","lunch_year","_data$launch$rocket","rocket","rocket_name","rocket_id","rocket_type","components_Mapgoogle","LANDPADS_QUERY","Landpads_templateObject","LandpadsComponent","landpads","full_name","longitude","latitude","MUTATION_ITEM","NewItemForm_templateObject","AddItem","_useMutation","useMutation","_useMutation2","slicedToArray","addItem","class","formik_esm","initialValues","Longitude","Latitude","Address","Description","Itemtype","Date","File","Price","Calification","ItemName","onSubmit","values","type","setTimeout","alert","JSON","stringify","render","htmlFor","name","placeholder","file_picker","multiple","marginBottom","onChange","files","DatePicker_default","bind","require","Types","ObjectId","item","align","src","pandown","alt","items","photo","itemname","description","date","actiontype","_id","ITEMS_QUERY","Items_templateObject","Items","map","Item_item","ITEM_QUERY","item_detail_templateObject","ITEM_DELETE","_templateObject2","item_details","item_id","_data$item","price","currency","calification","promoted","documents_link","publico","mutation","mutationitem","onClick","FileUpload","submitFile","event","preventDefault","formData","FormData","append","file","axios","post","headers","Content-Type","then","response","Location","setState","url","parentCallback","catch","handleFileUpload","target","success","label","CreateItem_templateObject","CreateItem","nombre","descripcion","latitud","longitud","foto","precio","moneda","calificacion","fecha","tipo","promocionado","fechapromo","documentos","callbackFunction","childData","_this2","_this$state","fileupload_FileUpload","refresh","client","ApolloClient","uri","App","react_router","exact","path","component","Item_Details","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b693038.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 200;","module.exports = __webpack_public_path__ + \"static/media/arrow-down-bold.f6e1f90c.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\nimport classNames from 'classnames'\n//import Moment from 'react-moment'\n//import 'moment-timezone';\nimport { Link } from 'react-router-dom'\n\n\nexport default function TravelItem( {launch: {flight_number, mission_name, launch_date_local, launch_success }}){\n    \n    return (\n        \n        <div className=\"card card-body mb-3\">\n           \n            <div className=\"row\">\n            <div className=\"col-md-9\">\n                <h4>Mission :<span className={classNames({\n                    'text-success' : launch_success,\n                    'text-danger': !launch_success\n                })}>{mission_name}</span></h4>\n\n                <p>Date: {launch_date_local } </p>\n             \n            </div>\n            <div className=\"col-md-3\">\n            <Link  to={`/travel/${flight_number}`} className=\"btn btn-secondary\"> Travel details</Link>\n            </div>\n          \n            </div>\n        </div>\n    )\n}","import React from 'react'\n\nexport default function MissionKey (){\n\n    return (\n        <div className=\"my-3\">\n            <p><span className=\"px-3 mr-2 bg-success\" />  = Success\n            \n            </p>\n            <p><span className=\"px-3 mr-2 bg-danger\" /> = Fail\n            \n            </p>\n             \n        </div>\n    )\n}    ","import React, {Component, Fragment} from 'react'\nimport gql from 'graphql-tag';\nimport { Query} from 'react-apollo'\nimport Travelitem from './Travelitem'\nimport Missionkey from './Missionkey'\nimport OrbitSpinner from '@bit/bondz.react-epic-spinners.orbit-spinner';\nimport { Link } from 'react-router-dom';\n\n\nconst TRAVELS_QUERY =gql`\nquery TravelsQuery{\n\n    travels{\n        flight_number\n        mission_name\n        launch_date_local\n        launch_success\n    }\n}\n\n\n`;\n\n\n\n\nexport class Travels extends Component {\nrender (){\n    return (\n        <Fragment>\n                <h1 className=\"display-4 my-3\">Travel Item list</h1>\n                <Missionkey></Missionkey>\n                \n                <div className=\"col-md-3\">\n            <Link  to={`/new/`} className=\"btn btn-secondary\"> New item</Link>\n            </div>    \n\n\n                \n                <Query query={TRAVELS_QUERY}>\n                    {\n                        ({loading, error, data}) => {\n\n                            if (loading ) return <OrbitSpinner  color='#000000'\n                            size='200'></OrbitSpinner>;\n                            if (error) console.log(error);\n                            return <Fragment> \n                                \n                                { \n                                    data.travels.map(launch => \n                                        (\n                                            <Travelitem key={launch.flight_number} launch={launch} />\n                                            \n                                        ))\n\n                                }\n                            </Fragment>;\n                        }\n                    }\n\n\n\n                </Query>\n\n        </Fragment>\n    )\n}\n}\n\nexport default Travels;","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\n \nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n \nexport class Mapgoogle extends Component {\n\n  constructor() {\nsuper ();\n    this.state ={\n      center:this.props\n    }\n\n  }\n  static defaultProps = {\n    center: {\n      lat: 40.4670516,\n      lng: -3.6749555\n    },\n    zoom: 15\n  };\n \n  render() {\n    return (\n      // Important! Always set the container height explicitly  \n      \n      <div className =\"border\" style={{ height: '50vh', width: '100%' }}>\n        <GoogleMapReact\n         bootstrapURLKeys={{ key: 'AIzaSyB-xstv3xOCRAsS5Hk5cNFOg8no5GtKzZk'}}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n        >\n          <AnyReactComponent\n            lat={this.lat}\n            lng={this.long}\n            text=\"My Marker\"\n          />\n        </GoogleMapReact>\n      </div>\n      \n    );\n  }\n}\n \nexport default Mapgoogle;\n","import React, { Component,Fragment} from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom';\n//import classNames from 'classnames';\nimport Mapgoogle from './Mapgoogle'\n\n//var center=null;\nconst TRAVEL_QUERY = gql `\nquery TravelQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n        flight_number\n        mission_name\n        launch_year\n        launch_success\n        launch_date_local,\n        rocket {\n            rocket_id\n            rocket_name\n            rocket_type\n        }\n    }\n}\n`;\n\nexport class Travel extends Component {\n    render (){\n        let { flight_number} = this.props.match.params;\n        flight_number = parseInt(flight_number);\n        return (\n            <Fragment>\n              <Query query={TRAVEL_QUERY} variables={{flight_number}}>\n                {({loading,error,data}) => {\n                        if (loading) return <h4>Loading...</h4>;\n                        if (error) console.log(error);\n                       \n                        const {mission_name,flight_number,lunch_year,launch_success,rocket:{rocket_id, rocket_name,rocket_type}}=data.launch;\n                        return <div>\n                            <h2 className=\" display-6 my-3\"> <span className=\"text-dark\">Mission </span>\n                            </h2>\n\n                         \n                                        \n\n                            <Mapgoogle center={{lat:38.4670516,lng:-3.6749555}}>\n                           \n                                    \n                            </Mapgoogle>\n\n                              <h4 className=\"mb-3\">Travel details</h4>\n                                <ul>\n                                    <li className=\"list-group-item\">\n                                    Flight Number: {flight_number}\n                                    </li>\n                                </ul>\n                              \n                                <ul>\n                                    <li className=\"list-group-item\">\n                                    Success: {launch_success}\n                                    </li>\n                                </ul>\n                                <ul>\n                                    <li className=\"list-group-item\">\n                                    Rocket: {rocket_name}\n                                    </li>\n                                </ul><ul>\n                                    <li className=\"list-group-item\">\n                                    Rocket_type: {rocket_type}\n                                    </li>\n                                </ul>\n\n\n                          <Link to=\"/\" className=\"btn btn-secondary\"> Back </Link>  \n                        </div>\n                      \n                    }\n\n                }\n             </Query>\n            </Fragment>\n\n            \n        );\n    }\n}\n\nexport default Travel","import React, { Component,Fragment} from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Link } from 'react-router-dom';\n//import classNames from 'classnames';\n\nconst LANDPADS_QUERY = gql`\n    query LandpadsQuery {\n         landpads{\n             id\n             full_name\n             location{\n                  region\n                  name\n                  longitude\n                  latitude\n               }\n        \n      }\n}\n`;\n\nexport class LandpadsComponent extends Component {\n    render (){\n        return (\n            <Fragment>\n              <Query query={LANDPADS_QUERY} >\n                {({loading,error,data}) => {\n                        if (loading) return <h4>Loading...</h4>;\n                        if (error) console.log(error);\n\n                        console.log (data);\n                        \n                        const id=data.landpads.id;\n                        const full_name=data.landpads.full_name\n                        const longitude=data.landpads.longitude\n                        const latitude=data.landpads.latitude\n\n\n\n                    \n                      //  const {id, full_name, location:{longitude, latitude}}=data.landpads;\n                        return <div>\n                            <h1 className=\" display-4 my-3\"> <span className=\"text-dark\">Landpads </span>\n                            </h1>\n                               <h4 className=\"mb-3\">Landpads details</h4>\n                               \n                               \n                                <ul>\n                                    <li className=\"list-group-item\">\n                                    id: {id}\n                                    </li>\n                                </ul><ul>\n                                    <li className=\"list-group-item\">\n                                    Full_name: {full_name}\n                                    </li>\n                                </ul>\n                                <ul>\n                                    <li className=\"list-group-item\">\n                                    longitude: {longitude}\n                                    latitude: {latitude}\n                                    </li>\n                                </ul>\n                              \n\n\n                          <Link to=\"/\" className=\"btn btn-secondary\"> Back </Link>   \n                        </div>\n                      \n                    }\n\n                }\n             </Query>\n            </Fragment>\n\n            \n        );\n    }\n}\n\nexport default LandpadsComponent\n\n\n","import React from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport { FilePicker } from '@bit/segmentio.evergreen.file-picker';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ApolloConsumer } from \"react-apollo\";\nimport DatePicker from '@bit/taverasmisael.ha-components.date-picker';\nimport Mapgoogle from './Mapgoogle';\nimport { set } from 'mongoose';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { exec } from 'child_process';\n//import { client } from '../App'\n//npm i @bit/atto-byte.components.date-range\n//import { Debug } from './Debug';\n\nconst MUTATION_ITEM=gql`\n\nmutation AddItem($nombre: String!, $descripcion: String!) {\n    item(itemname: $nombre, description: $descripcion) {\n        \n        itemname,\n        description\n    }\n\n}\n\n\n`;\n\n\n\nconst AddItem = () => {\n\n//client.mutate({MUTATION_ITEM});\nconst [addItem, { data }] = useMutation(MUTATION_ITEM);\n\n\n  \n  return(\n\n   \n  <div>\n    <h1>Add new Item</h1>\n    <div class=\"py-5 text-center\">\n    <Mapgoogle ></Mapgoogle>\n    </div>\n    <Formik\n      initialValues={{\n        Longitude: '',\n        Latitude: '',\n        Address: '',\n        Description: '',\n        Itemtype: '',\n        Date:'',\n        File: '',\n        Price: '',\n        Calification: '',\n        ItemName: ''\n      }}\n    \n      onSubmit={values => {\n\n\n        \n        addItem({ variables: { type: values } });\n        setTimeout(() => {\n          \n          \n         \n         console.log (data);\n          alert(JSON.stringify(values, null, 2));\n        }, 500);\n      //<Mutation mutation={MUTATION_ITEM} args={(values.ItemName,values.Description)} />;\n      }\n    \n    }\n      render={() => (\n        \n       \n        <Form>\n           \n            <div class=\"row\">\n                <div class=\"list-group mb-3\">\n          <label htmlFor=\"ItemName\">Item Name:   </label>\n          <Field name=\"ItemName\" placeholder=\"Paseo por el parque\" />\n          </div>\n            <div class=\"list-group mb-3\">\n          <label htmlFor=\"Latitude\"> Latitude     </label>\n          <Field name=\"Latitude\" placeholder=\"35.45\" />\n          </div>\n          <div class=\"list-group mb-3\">\n          <label htmlFor=\"Address\">Address</label>\n          <Field name=\"Address\" placeholder=\"C/Dracena 25\" />\n          </div>\n\n          <div class=\"list-group mb-3\">\n\n          <label htmlFor=\"Description\">Description</label>\n          <Field  name=\"Description\" placeholder=\"A nice place close to the river\" />\n          \n          </div>\n          <div class=\"list-group mb-3\">\n          <label htmlFor=\"Itemtype\">ItemType</label>\n          <Field name=\"Itemtype\" placeholder=\"Jane\" />\n          </div>\n          <div class=\"list-group mb-3\">\n          <label htmlFor=\"File\">File</label>\n          <FilePicker name=\"File\"\n\t\t        multiple\n\t        \twidth={250}\n\t\t        marginBottom={32}\n\t\t        onChange={files => console.log(files)}/>\n                </div>\n        <div class=\"list-group mb-3\">      \n        <label htmlFor=\"Date\">Date</label>\n        <DatePicker name=\"Date\" onChange={console.log.bind(console) }/>\n        \n        </div>\n        \n        <div class=\"list-group mb-3\">\n          <label htmlFor=\"Price\">Price</label>\n          <Field name=\"Price\" placeholder=\"100\" />\n          </div>\n          <div class=\"list-group mb-3\">\n          <label htmlFor=\"Calification\">Calification</label>\n          <Field name=\"Calification\" placeholder=\"Doe\" />\n          </div>\n          <div class=\"list-group mb-3\">\n          <button type=\"submit\">Submit</button>\n            \n            </div>\n          </div>\n        </Form>\n          \n      )}\n    />\n  </div>\n \n);\n      }\nexport default AddItem;","import React from 'react'\nimport classNames from 'classnames'\n//import Moment from 'react-moment'\n//import 'moment-timezone';\nimport logo from './../logo.svg';\nimport { Link } from 'react-router-dom';\nimport Mapgoogle from './Mapgoogle';\nimport pandown from './arrow-down-bold.svg';\n\n//<p>ID: {props.items._id}</p>\n//<p>Initial Location: { props.items.initial_location}</p>\n//<p>Photo: { props.items.photo}</p>\n//<p>Price: { props.items.price}</p>\n//<p>Currency: { props.items.currency}</p>\n//<p>Action Type: { props.items.actiontype}</p>\n//<p>Promoted: { props.items.promoted}</p>\n//<p>Docs: { props.items.documents_link}</p>\n//<p>Owner: { props.items.owner}</p>\n//<p>Public: { props.items.public}</p>\n\nvar mongo = require('mongodb');\n\nconst Mongoose = require('mongoose')\nconst ObjectId = Mongoose.Types.ObjectId;\n\n//export default function item( {items: { _id, itemname, description, date, actiontype }},props){!-- <Mapgoogle center={{lat:38.4670516,lng:-3.6749555}}></Mapgoogle> -->\nexport default function item(props){\n\n //  var ident= mongo.ObjectId(props.items._id).valueOf;\n\n    return (\n        \n       \n       \n        <div className=\" mb-3\">\n            <div className=\"text-center\">\n             <img align=\"center\" height=\"42\" width=\"42\"src={pandown} className=\"Down_arrow\" alt=\"arrow\" />\n             <Link  to={`/createitem/`} className=\"btn btn-secondary\">+</Link>\n            </div>\n             <p></p>\n           \n            <div className=\"card card-body mb-3\">\n           \n                 <img height=\"20%\" width=\"100%\"src={props.items.photo} className=\"App-logo\" alt=\"picture\" /> \n\n                 \n                 <p></p>\n           \n                \n            <div className=\"row\">\n            <div className=\"col-md-9\">\n                <h4>{props.items.itemname}</h4>\n                <p>Description: {props.items.description} </p>\n                <p>Date: {props.items.date } </p>\n                <p>Tipo: {props.items.actiontype } </p> \n               \n            \n\n             \n\n             \n                </div>\n            <div className=\"col-md-3\">\n            <Link  to={`/items_detail/${(props.items._id)}`} key={`${(props.items._id)}`} className=\"btn btn-secondary\"> Item details</Link>\n            </div>\n            </div>\n            </div>\n            \n            \n        </div>\n        \n        \n    )\n}","import React, {Component, Fragment} from 'react'\nimport gql from 'graphql-tag';\nimport { Query} from 'react-apollo'\nimport Item from './Item'\nimport OrbitSpinner from '@bit/bondz.react-epic-spinners.orbit-spinner';\nimport { Link } from 'react-router-dom';\nimport item from './Item';\n\nconst Mongoose = require('mongoose')\nconst ObjectId = Mongoose.Types.ObjectId;\n\n\n\nconst ITEMS_QUERY=gql`\nquery ItemsQuery{\n    items {\n    _id    \n    itemname\n    photo\n    description\n    price\n    currency\n    calification\n    date\n    actiontype\n    promoted\n    datepromoted\n    documents_link\n    public\n  }\n\n}\n\n`;\n\n\nexport class Items extends Component {\n    render (){\n        return (\n            <Fragment>\n                    <h1 className=\"h6\" align=\"center\">Travel Item list</h1>\n                    \n                    \n                    <div className=\"col-md-3\">\n               \n                <p> </p>\n                </div>    \n    \n    \n                    \n                    <Query query={ITEMS_QUERY}>\n                        {\n                            ({loading, error, data}) => {\n    \n                                if (loading ) return <p>Loading...</p>;\n                                if (error) console.log(error);\n                                return <Fragment> \n                                    \n                                    { \n                                    data.items.map(item => \n                                        (\n                                            <Item key={item._id} items={item} />\n                                           \n                                             //console.log(data.items)\n                                        ))\n                                       \n                                    } \n                                     \n                                    <div className=\"col-md-9\"></div>\n           \n\n                                </Fragment>;\n                               \n                            }\n                        }\n    \n    \n    \n                    </Query>\n    \n            </Fragment>\n        )\n    }\n    }\n    \n    export default Items;","import React, {Component, Fragment} from 'react'\nimport classNames from 'classnames'\nimport gql from 'graphql-tag';\n//import Moment from 'react-moment'\nimport 'moment-timezone';\nimport logo from './../logo.svg';\nimport { Link } from 'react-router-dom';\nimport Mapgoogle from './Mapgoogle';\nimport pandown from './arrow-down-bold.svg';\nimport { Query } from 'react-apollo';\nimport { Mutation } from 'react-apollo';\n\nvar mongo = require('mongodb');\n\nconst Mongoose = require('mongoose')\nconst ObjectId = Mongoose.Types.ObjectId;\n\nconst ITEM_QUERY=gql`\nquery ItemQuery($item_id:String!){\n    item(_id: $item_id) {\n    _id    \n    itemname\n    photo\n    description\n    price\n    currency\n    calification\n    date\n    actiontype\n    promoted\n    datepromoted\n    documents_link\n    public\n  }\n\n}\n\n`;\n\nconst ITEM_DELETE=gql`\nmutation deleteitem($item_id:String!) {\n    \n    deleteitem(_id: $item_id) {\n      _id\n    \n    }\n  } \n`;\n\n//hace falta cambiarlo a una clase...\n\n//export default function item( {items: { _id, itemname, description, date, actiontype }},props){!-- <Mapgoogle center={{lat:38.4670516,lng:-3.6749555}}></Mapgoogle> -->\nexport class item_details extends Component {\n\n\n //  var ident= mongo.ObjectId(props.items._id).valueOf;\n //let { item_id} = this.props.match.params;\n\nrender (){\n    let { item_id} = this.props.match.params;\n    //console.log(\"elID:\"+item_id);\n\n    return (\n        <Fragment>\n        <Query query={ITEM_QUERY} variables={{item_id}}>\n          {({loading,error,data}) => {\n            if (loading) return <h4>Loading...</h4>;\n            if (error) console.log(error);\n            //console.log(data);\n            const {_id,itemname,photo,description,price,currency,calification,date,actiontype,promoted,documents_link,publico}=data.item;\n\n            //console.log(JSON.parse(photo))\n\n        return  <div className=\" mb-3\">\n           \n           \n            <div className=\"card card-body mb-3\">\n            <img height=\"50%\" width=\"100%\"src={photo} className=\"App-logo\" alt=\"picture\" />\n            <Mapgoogle center={{lat:38.4670516,lng:-3.6749555}}></Mapgoogle> \n            <div className=\"row\">\n            <div className=\"col-md-9\">\n                <h4>{itemname}</h4>\n                <p>Description: {description} </p>\n                <p>Date: {date } </p>\n                <p>Tipo: {actiontype } </p> \n               \n            \n\n                <p>ID: {_id}</p>\n              \n                <p>Photo: { photo}</p>\n                <p>Price: { price}</p>\n                <p>Currency: {currency}</p>\n                <p>Action Type: { actiontype}</p>\n                <p>Promoted: {promoted}</p>\n                <p>Docs: { documents_link}</p>\n                <p>Calification: {calification}</p>\n                <p>Public: { publico}</p>\n                \n\n             \n                </div>\n            <div className=\"col-md-3\">\n            <Link  to={`/`} className=\"btn btn-secondary\"> Back</Link>\n            <Link  to={`/edit/`} className=\"btn btn-secondary\">Edit</Link>\n\n            <Mutation mutation={ITEM_DELETE} variables={{ item_id  } }>\n         {mutationitem => <button className=\"btn btn-secondary\" onClick={mutationitem}>Borrar</button>}\n      </Mutation>\n            </div>\n            </div>\n            </div>\n            \n            \n        </div>\n        }\n    }\n        </Query>\n        </Fragment>\n    );     \n}\n}\n\nexport default item_details;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport class FileUpload extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      file: null,\n      success : false,\n      url : \"not set\"\n    };\n  }\n\n  submitFile = (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('file', this.state.file[0]);\n    axios.post(`/test-upload`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      // handle your response;\n  \n      var Location = response.data.Location;\n    //function to send the url back to the parent\n       //sendData = () => {\n       // this.props.parentCallback(Location);\n       //  }\n\n\n      this.setState({url: Location})\n      console.log(\"File uploaded to \" + Location);\n      //return Location; //enviando el resultado\n      this.props.parentCallback(Location);\n      \n    }).catch(error => {\n      // handle your error\n    });\n  }\n\n  handleFileUpload = (event) => {\n    this.setState({file: event.target.files});\n  }\n\n  render () {\n    return (\n      <form onSubmit={this.submitFile}>\n        <input label='upload file' type='file' onChange={this.handleFileUpload} />\n        <button type='submit'>Send</button>\n      </form>\n    );\n  }\n}\n\nexport default FileUpload;","import React, { Component } from 'react'\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport Mapgoogle from './Mapgoogle';\n//import { FilePicker } from '@bit/segmentio.evergreen.file-picker';\nimport { Link } from 'react-router-dom';\nimport { FileUpload } from './fileupload.js'\n\n//import loadImage from './loadImage.js'\n // type=\"file\" accept=\"image/png, image/jpeg, image/jpg\" \n       // onChange={e => this.setState({ foto: (Buffer.from(JSON.stringify(e.target.files[0])).toString(\"base64\"))})} />\n       //Buffer(fs.readFileSync(req.files[i].path)).toString(\"base64\")\n       //onChange={e => this.setState({ foto: (Buffer.from(e.target.files[0]))})} />\n\n\nconst MUTATION_ITEM=gql`\n\nmutation AddItem($nombre: String!, $descripcion: String!,$latitud:String!,$longitud:String!, $foto:String, $precio:Int, $moneda:String, $calificacion:String, $fecha:String,$tipo:String,$promocionado:String,$fechapromo:String,$documentos:String, $publico:Boolean) {\n    item(itemname: $nombre, description: $descripcion, latitude:$latitud, longitude:$longitud,photo:$foto, price:$precio, currency:$moneda,calification:$calificacion,date:$fecha,actiontype:$tipo,promoted:$promocionado,datepromoted:$fechapromo,documents_link:$documentos,public:$publico ) {\n        \n        itemname,\n        description,\n        latitude,\n        longitude,\n        photo,\n        price,\n        currency,\n        calification,\n        date,\n        actiontype,\n        promoted,\n        datepromoted,\n        documents_link,\n        public\n    }\n\n}\n`;\n\nclass CreateItem extends Component {\n  state = {\n    nombre: '',\n    descripcion: '',\n    latitud:'40.4670516',\n    longitud:'-3.6749555',\n    foto:null,\n    precio:0,\n    moneda:'EUR',\n    calificacion:'',\n    fecha:'',\n    tipo:'',\n    promocionado:'',\n    fechapromo:'',\n    documentos:'',\n    publico:true\n\n  };\n\n  callbackFunction = (childData) => {\n    this.setState({foto: childData})\n}\n\n  \n\n  render() {\n   \n    const { nombre, descripcion, latitud,longitud, foto, precio,moneda,calificacion,fecha,tipo,promocionado,fechapromo,documentos,publico } = this.state;\n    return (\n     \n      <div>\n\n\nPhoto <br>\n        </br>\n      \n       <FileUpload parentCallback = {this.callbackFunction} //onChange={e => this.setState({ foto: e.props.url})} />\n      />\n        <img height=\"20%\" width=\"100%\"src={this.state.foto} className=\"App-logo\" alt=\"picture\" /> \n       \n\n       \n         <div className=\"py-5 text-center\">\n         <Mapgoogle ></Mapgoogle>\n         </div>\n        <div className=\"flex flex-column mt3\">\n          Nombre      <br></br>\n          <input\n            className=\"mb2\"\n            value={nombre}\n            onChange={e => this.setState({ nombre: e.target.value })}\n            type=\"text\"\n            placeholder=\"The item name\"\n          ></input>\n          <div className=\"flex flex-column mt3\"></div>\n          Descripcion   <br></br>  \n          <input\n            className=\"mb2\"\n            value={descripcion}\n            onChange={e => this.setState({ descripcion: e.target.value })}\n            type=\"text\"\n            placeholder=\"A description for the item\"\n          />\n           <div className=\"flex flex-column mt3\">\n           Long      <br></br>\n          <input\n            className=\"mb2\"\n            value={latitud}\n            onChange={e => this.setState({ latitud: e.target.value })}\n            type=\"text\"\n            placeholder=\"The item name\"\n          ></input>\n          </div>\n          <div className=\"flex flex-column mt3\">\n          Lat   <br></br>\n          <input\n            className=\"mb2\"\n            value={longitud}\n            onChange={e => this.setState({ longitud: e.target.value })}\n            type=\"text\"\n            placeholder=\"A description for the item\"\n          />\n        </div>\n        </div>\n        <div className=\"mb2\">\n\n       \n\n\n        \n          \n          \n          \n          \n            \n        Precio     <br></br>  \n          <input\n            className=\"mb2\"\n            value={precio}\n            onChange={e => this.setState({ precio:  e.target.value})}\n            type=\"text\"\n            placeholder=\"Precio del item\"\n          />\n        </div>\n\n        \n\n\n\n      <Mutation mutation={MUTATION_ITEM} variables={{ nombre, descripcion, latitud, longitud, foto, precio, moneda, calificacion,fecha,tipo,promocionado,fechapromo,documentos,publico  }}>\n        \n      \n         {mutationitem => {\n          \n            return <button className=\"btn btn-secondary\" onClick={mutationitem}>Submit</button>;\n          }}\n        \n      </Mutation>\n\n      <Link  to={`/`} refresh=\"true\" className=\"btn btn-secondary\"> Back</Link>\n      </div>\n    )\n  }\n}\n\nexport default CreateItem","import React, {Component} from 'react';\nimport ApolloClient from 'apollo-boost';\nimport {ApolloProvider} from 'react-apollo';\n//import { ApolloProvider } from '@apollo/react-hooks';\nimport Travels from \"./components/Travels\"\nimport Travel from \"./components/Travel\"\nimport { LandpadsComponent } from \"./components/Landpads\"\nimport { Mapgoogle } from \"./components/Mapgoogle\"\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport './App.css';\nimport AddItem from './components/NewItemForm';\nimport Items from './components/Items';\nimport Item_Details from './components/item_detail';\nimport CreateItem from './components/CreateItem';\nimport FileUpload from './components/fileupload';\n\n\nconst client =new ApolloClient({\n//uri: 'http://localhost:5000/graphql'\nuri: '/graphql'\n});\n\n\nclass App extends Component {\n  \n  render() {\n    return (\n\n    <ApolloProvider client={client} >\n      <Router>\n    <div className=\"container\">\n\n        <h2><center>Travel Planner</center></h2>\n        \n        \n       <Route exact path=\"/\" component={Items} />\n\n       <Route exact path=\"/items_detail/:item_id\" component={Item_Details}/>\n      \n       <Route exact path=\"/travel/:flight_number\" component={Travel} />\n\n       <Route exact path=\"/landpads/\" component={ LandpadsComponent } />\n\n       <Route exact path=\"/maps/\" component={ Mapgoogle } />\n\n       <Route exact path=\"/new/\" component={ AddItem } />\n\n       <Route exact path=\"/createitem/\" component={ CreateItem } />\n\n       <Route exact path=\"/fileupload/\" component={ FileUpload } />\n      \n    </div>\n    </Router> \n    </ApolloProvider>\n\n  );\n}\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}